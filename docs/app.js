"use strict";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(arr,i){if(!(Symbol.iterator in Object(arr)||Object.prototype.toString.call(arr)==="[object Arguments]")){return}var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(iter){if(Symbol.iterator in Object(iter)||Object.prototype.toString.call(iter)==="[object Arguments]")return Array.from(iter)}function _arrayWithoutHoles(arr){if(Array.isArray(arr)){for(var i=0,arr2=new Array(arr.length);i<arr.length;i++){arr2[i]=arr[i]}return arr2}}function _typeof(obj){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj}}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj}}return _typeof(obj)}(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{enumerable:true,get:getter})}};__webpack_require__.r=function(exports){if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(exports,"__esModule",{value:true})};__webpack_require__.t=function(value,mode){if(mode&1)value=__webpack_require__(value);if(mode&8)return value;if(mode&4&&_typeof(value)==="object"&&value&&value.__esModule)return value;var ns=Object.create(null);__webpack_require__.r(ns);Object.defineProperty(ns,"default",{enumerable:true,value:value});if(mode&2&&typeof value!="string")for(var key in value){__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key))}return ns};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=0)})([function(module,exports,__webpack_require__){module.exports=__webpack_require__(1)},function(module,exports,__webpack_require__){var json={};__webpack_require__(2);yodasws.page("home").setRoute({template:"pages/home.html",route:"/"})},function(module,exports){yodasws.page("play/main").setRoute({template:"pages/play/main/main.html",route:"/play/main/"}).on("load",function(){console.log("Players:",game.players[0]);game.btnSkip=document.getElementById("btnSkip");game.btnSkip.addEventListener("click",function(e){game.buildMap();game.doAction()});game.boardActions=document.getElementById("action-board");game.actionButtons;game.boardMap=document.getElementById("map-board");game.info={top:document.getElementById("top-info")};game.startGame()});window.game={round:0,players:[],currentPlayer:0,currentActions:[],map:new Array(5).fill(0).map(function(a){return new Array(3).fill("").map(function(){return new Tile("grass")})}),buildings:{mine:{name:"Mine"},papermill:{name:"Papermill"},sawmill:{name:"Sawmill"},quarry:{name:"Quarry"},"oil-rig":{name:"Oil Rig",terrain:["ocean"]},"coal-burner":{name:"Coal Burner"},mint:{name:"Mint"},"stock-exchange":{name:"Stock Exchange"}},supplies:{"sheep":0,"boar":0,"cattle":0,"horse":0,"wood":0,"clay":0,"reed":0,"stone-1":0,"stone-2":0,"reed-stone-food":0,"reed-stone-wood":0},actions:[{action:"build",text:"<b>Build Improvements</b>"},{action:"starting-player",text:"<b>Starting Player</b>"},{action:"grain",text:"<b>Take 1 Grain</b>"},{action:"plow",text:"<b>Plow 1 Farmland</b>"},{action:"sow",text:"<b>Sow</b><br/>and/or<br/><b>Bake Bread</b>",round:1},{action:"plow-sow",text:"<b>Plow 1 Farmland</b><br/>and/or<br/><b>Sow</b>",round:5},{action:"road",text:"<b>Build Road</b>"},{action:"laborer",text:"<b>Day Laborer</b>"},{action:"fishing",text:"<b>Fishing</b><br/>2 Food"},{action:"hire",text:"<b>Hire Worker</b>",round:2},{action:"hire-wo-room",text:"<b>Hire Worker</b> even without room",round:5},{action:"fences",text:"<b>Fences</b>",round:1},{action:"sheep",text:"<b><output></output> Sheep</b>",round:1},{action:"boar",text:"<b><output></output> Wild Boar</b>",round:3},{action:"cattle",text:"<b><output></output> Cattle</b>",round:4},{action:"horse",text:"<b><output></output> Horse</b>",round:5},{action:"animal",text:"<b>1 Sheep and 1 Food</b><br/>or <b>1 Wild Boar</b><br/>or pay 1 Food for <b>1 Cattle</b>",round:5},{action:"vegetable",text:"<b>Take 1 Vegetable</b>",round:3},{action:"wood",text:"<b><output></output> Wood</b>"},{action:"clay",text:"<b><output></output> Clay</b>"},{action:"reed",text:"<b><output></output> Reed</b>"},{action:"stone-1",text:"<b><output></output> Stone</b>",round:2},{action:"stone-2",text:"<b><output></output> Stone</b>",round:4},{action:"reed-stone-food",text:"<b><output></output> Reed</b>,<br/><b><output></output> Stone</b>,<br/>and <b><output></output> Food</b></b>",players:4},{action:"reed-stone-wood",text:"<b><output></output> Reed</b><br/>also <b>1 Stone and 1 Wood</b>",players:5},{action:"build-traveling",text:"<b>Build 1 Improvement</b><br/>or<br/><b>Traveling Players</b>",players:5}],startTurn:function startTurn(){game.boardActions.classList.remove("disabled");game.boardActions.scrollIntoView({behavior:"smooth",block:"center"});game.info.top.innerHTML="Current Player: <b>".concat(game.players[game.currentPlayer].name,"</b>")},takeAction:function takeAction(e){if(game.currentActions.length||game.boardActions.classList.contains("disabled")){return}game.boardActions.classList.add("disabled");if(game.players[game.currentPlayer].availableWorkers<=0){return}var action=e instanceof Event?e.currentTarget.dataset.action:e;var actionTile=e instanceof Event?e.currentTarget:document.querySelector("button[data-action=\"".concat(action,"\"]"));actionTile.setAttribute("disabled","");game.players[game.currentPlayer].availableWorkers--;if(game.supplies[action]){game.supplies[action]=0;_toConsumableArray(actionTile.querySelectorAll("output")).forEach(function(output){output.innerText=0})}switch(action){case"build-traveling":break;case"starting-player":break;case"plow-sow":game.currentActions=["plow","sow"];break;case"fences":break;case"animal":break;default:game.currentActions.push(action);}game.doAction()},doAction:function doAction(){game.hideActions();var action=game.currentActions.shift();if(!action){game.endAction();return}switch(action){case"build":game.buildSubActionBoard(action);return;case"build-traveling":break;case"starting-player":break;case"vegetable":case"grain":game.players[game.currentPlayer].supplies[action]++;break;case"plow":case"sow":game.buildSubActionBoard(action);game.buildMap(action);return;case"laborer":break;case"fishing":break;case"fences":break;case"hire":if(game.players[game.currentPlayer].workers<5){game.players[game.currentPlayer].workers++}break;case"hire-wo-room":if(game.players[game.currentPlayer].workers<5){game.players[game.currentPlayer].workers++}break;case"animal":break;}game.doAction()},endAction:function endAction(){var nextTurn=false;for(var i=0;i<game.players.length;i++){game.currentPlayer++;if(game.currentPlayer>=game.players.length){game.currentPlayer=0}if(game.players[game.currentPlayer].availableWorkers!==0){nextTurn=true;break}}if(nextTurn)game.startTurn();else game.endRound()},startGame:function startGame(){var buttonHolder=document.getElementById("action-buttons");Object.entries(game.buildings).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),id=_ref2[0],btn=_ref2[1];var el=document.createElement("button");el.addEventListener("click",game.build);el.setAttribute("hidden","");buttonHolder.appendChild(el);el.dataset.action="build";el.dataset.improvement=id;el.innerText=btn.name});game.actionButtons=document.querySelectorAll("#action-buttons button");game.buildMap();game.startRound()},startRound:function startRound(){var _this=this;this.round++;Object.entries(this.supplies).forEach(function(_ref3){var _ref4=_slicedToArray(_ref3,2),key=_ref4[0],num=_ref4[1];if(["sheep","boar","cattle","horse","stone-1","stone-2"].includes(key)){if(_this.round>=_this.actions.filter(function(a){return a.action===key})[0].round)_this.supplies[key]++}else if(key==="wood"){_this.supplies[key]+=3}else{_this.supplies[key]++}});game.boardActions.classList.remove("end");game.boardActions.innerHTML="";this.actions.forEach(function(action){if(action.round&&_this.round<action.round){return}if(action.players&&action.players!==_this.players.length){return}var btn=document.createElement("button");btn.innerHTML=action.text;btn.dataset.action=action.action;btn.addEventListener("click",_this.takeAction);_toConsumableArray(btn.querySelectorAll("output")).forEach(function(output){output.innerText=_this.supplies[action.action]});game.boardActions.appendChild(btn)});_toConsumableArray(game.boardActions.querySelectorAll("button")).forEach(function(btn){btn.removeAttribute("disabled")});this.players.forEach(function(player){player.availableWorkers=player.workers});this.currentPlayer=0;game.startTurn()},endRound:function endRound(){_toConsumableArray(game.boardActions.querySelectorAll("button")).forEach(function(btn){btn.setAttribute("disabled","")});game.info.top.innerHTML="End of Round";game.info.top.scrollIntoView({behavior:"smooth",block:"center"});setTimeout(function(){game.startRound()},1000)},buildMap:function buildMap(action){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var initialBuild=game.boardMap.innerHTML==="";game.map.forEach(function(r1,r2){r1.forEach(function(c1,c2){c1.html.innerHTML="";c1.html.dataset.col=c2;c1.html.dataset.row=r2;c1.html.dataset.use=c1.improvements.join(" ");switch(action){case"build":{var improvement=game.buildings[options.improvement];if(!improvement)break;if(c1.improvements.length>0)break;if(!(improvement.terrain||["plains","grass"]).includes(c1.terrain)){break}var btn=document.createElement("button");btn.innerHTML="Build Here";btn.addEventListener("click",game.buildHere);btn.dataset.improvement=options.improvement;c1.html.appendChild(btn);break}case"plow":{if(c1.improvements.length>0||!["plains","grass"].includes(c1.terrain)){break}var _btn=document.createElement("button");_btn.innerHTML="Plow Farmland";_btn.addEventListener("click",game.plow);c1.html.appendChild(_btn);break}case"sow":{if(!c1.improvements.includes("farm")){break}var _btn2;["grain","vegetable"].forEach(function(plant,i,plants){if(c1.improvements.intersects(plants)){return}if(game.players[game.currentPlayer].supplies[plant]>0){_btn2=document.createElement("button");_btn2.innerHTML="Sow ".concat(plant);_btn2.addEventListener("click",function(e){return game.sow(e,plant)});c1.html.appendChild(_btn2)}});break}}if(initialBuild)game.boardMap.appendChild(c1.html)})});game.boardMap.style.gridTemplateColumns="repeat(".concat(game.map[0].length,", 1fr)");game.boardMap.style.gridTemplateRows="repeat(".concat(game.map.length,", 1fr)");game.boardMap.scrollIntoView({behavior:"smooth"})},buildSubActionBoard:function buildSubActionBoard(action){game.actionButtons.forEach(function(btn){if(btn.dataset.action.includes(action)){btn.removeAttribute("hidden")}});switch(action){case"plow":case"sow":game.btnSkip.removeAttribute("hidden");break;}},plow:function plow(e){var farm=e.currentTarget.closest(".tile");var _ref5=[farm.dataset.col,farm.dataset.row],col=_ref5[0],row=_ref5[1];game.map[row][col].improvements.push("farm");game.buildMap();game.doAction()},sow:function sow(e,plant){if(game.players[game.currentPlayer].supplies[plant]<1){return}var farm=e.currentTarget.closest(".tile");var _ref6=[farm.dataset.col,farm.dataset.row],col=_ref6[0],row=_ref6[1];game.players[game.currentPlayer].supplies[plant]--;game.map[row][col].improvements.push(plant);game.map[row][col].supplies=_defineProperty({},plant,1);game.buildMap("sow")},hideActions:function hideActions(){game.actionButtons.forEach(function(btn){return btn.setAttribute("hidden","")})},build:function build(e){var btn=e.target;game.hideActions();game.buildMap("build",{improvement:btn.dataset.improvement});return},buildHere:function buildHere(e){var btn=e.target;var td=btn.closest(".tile");console.log("td:",td);var _ref7=[td.dataset.col,td.dataset.row],col=_ref7[0],row=_ref7[1];game.map[row][col].improvements.push(btn.dataset.improvement);console.log("tile:",game.map[row][col]);game.buildMap();game.doAction()}};game.actions.sort(function(a,b){if(!a.round&&!b.round){return 0}if(!a.round&&b.round){return-1}if(a.round&&!b.round){return 1}if(a.round===b.round){return Math.random()-0.5}return a.round-b.round}).filter(function(a,i){a.i=i;return!!a.round}).forEach(function(a,round){game.actions[a.i].round=round+1});function Player(name){this.workers=2;this.availableWorkers=2;this.supplies={"wood":0,"clay":0,"reed":0,"stone":0,"grain":0,"vegetable":0};this.name=name}function Tile(terrain){if(!["grass","ocean","plains"].includes(terrain)){throw new Error("Unacceptable terrain type!")}this.terrain=terrain;this.improvements=[];this.html=document.createElement("div");this.html.classList.add("tile");this.html.dataset.terrain=terrain}Array.prototype.intersects=function(arr){return this.filter(function(e){return arr.includes(e)}).length>0};var names=["Ashley","Audrey","Jiaxin","Mathilde","Jane","Susan","Tara","Sally","Stephanie"];game.map=[["plains","plains","ocean","plains","plains"],["plains","grass","ocean","grass","plains"],["plains","grass","ocean","grass","plains"],["plains","plains","ocean","plains","plains"]].map(function(row){return row.map(function(cell){return new Tile(cell)})});var numPlayers=4;for(var i=0;i<numPlayers;i++){game.players.push(new Player(i===0?"You!":names[i]))}}]);